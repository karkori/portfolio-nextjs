[{"slug":"2025-04-07-creando-microservicios-con-spring-boot","title":"Creando microservicios con Spring Boot","description":"Guía práctica para desarrollar microservicios con Spring Boot en 2025 sin complicaciones.","content":"Microservicios con Spring Boot: simplicidad y potencia\r \r Después de tanto tiempo trabajando con distintos frameworks, siempre acabo volviendo a Spring Boot para mis proyectos de microservicios. Y es que, a pesar de que muchos lo consideran \"pesado\" o \"antiguo\", la realidad es que Spring Boot ha evolucionado muchísimo, simplificando drásticamente el desarrollo.\r \r La semana pasada tuve que montar un pequeño servicio para un cliente, y quiero compartir ese proceso con vosotros. Vamos a ver cómo crear un microservicio sencillo pero completo con Spring Boot 3.2 la versión actual en 2025.\r \r Preparando el entorno\r \r Antes de nada, asegúrate de tener instalado:\r \r * Java 17 o superior yo uso Java 21\r * Maven o Gradle personalmente prefiero Gradle\r * Tu IDE favorito IntelliJ IDEA, Eclipse, VS Code...\r \r Generando el proyecto base\r \r Lo primero es crear la estructura del proyecto. Aunque puedes hacerlo manualmente, Spring Initializr es tu mejor amigo aquí:\r \r 1. Ve a <https://start.spring.io>","date":"2025-04-07T12:30:00.000Z","dateFormatted":"7 de abril de 2025","tags":["java","spring","microservicios","backend"],"category":"Backend","thumbnail":"/images/blog/spring-boot.png","readingTime":"5 min de lectura"},{"slug":"accesibilidad-web-guia-definitiva","title":"Accesibilidad Web - La Guía Definitiva que Todo Desarrollador Frontend Debe Conocer","description":"Aprende las mejores prácticas de accesibilidad web que transformarán tu código frontend y ampliarán el alcance de tus aplicaciones.","content":"Por qué la accesibilidad web ya no es opcional en 2025\r \r Hace unos años, cuando empecé en el desarrollo web, la accesibilidad era ese tema que \"algún día\" abordaría en mis proyectos. Ya sabéis cómo va esto: siempre hay features más urgentes, el cliente no lo pide explícitamente, el presupuesto es ajustado... y acabamos postergándolo. Hasta que un día, en un proyecto para una entidad pública, me vi obligado a cumplir con niveles WCAG AA. Y ahí descubrí que no solo estaba haciendo lo correcto, sino que mi código mejoraba notablemente.\r \r La realidad es que en 2025, con las normativas actuales como la Directiva Europea de Accesibilidad Web que ya se aplica a todos los sitios públicos y privados, ignorar la accesibilidad puede tener consecuencias legales. Pero más allá de eso, como desarrolladores, ¿no deberíamos construir productos que todo el mundo pueda usar? Al fin y al cabo, aproximadamente el 15% de la población mundial tiene algún tipo de discapacidad.\r \r En este artículo voy a com","date":"2025-04-08T10:15:00.000Z","dateFormatted":"8 de abril de 2025","tags":["accesibilidad","frontend","html","css","javascript"],"category":"Frontend","thumbnail":"/images/blog/ilustracion-concepto-accesibilidad.jpg","readingTime":"7 min de lectura"},{"slug":"ci-cd-spring-boot-guia-completa","title":"CI/CD para aplicaciones Java/Spring Boot - Guía completa desde cero hasta producción","description":"Implementa un pipeline de integración y despliegue continuo completo para aplicaciones Spring Boot, desde el desarrollo hasta producción.","content":"Automatización que cambió mi forma de trabajar  Cuando empecé a desarrollar aplicaciones con Spring Boot hace unos años, mi proceso era manual y tedioso: compilaba en local, ejecutaba tests manualmente, construía el JAR, me conectaba al servidor por SSH y desplegaba el archivo copiándolo al directorio correspondiente. Cualquier cambio pequeño significaba repetir todo el proceso.  El día que implementé mi primer pipeline de CI/CD completo, mi productividad se multiplicó. Y no solo eso: la calidad de mis entregas mejoró drásticamente.  En este artículo os voy a mostrar cómo monté mi pipeline de CI/CD para aplicaciones Spring Boot, desde el primer commit hasta el despliegue en producción, incluyendo todos los pasos intermedios. No es teoría abstracta ni conceptos vagos; es exactamente lo que uso en mis proyectos reales.  ¿Qué vamos a construir?  Un pipeline de CI/CD completo que: 1. Se dispara automáticamente con cada push o pull request 2. Construye la aplicación Spring Boot 3. Ejecuta t","date":"2025-04-09T09:30:00.000Z","dateFormatted":"9 de abril de 2025","tags":["devops","java","spring","github","docker","kubernetes"],"category":"DevOps","thumbnail":"/images/blog/ci-cd_springboot.png","readingTime":"9 min de lectura"},{"slug":"desarrollo-sostenible-green-coding-2025","title":"Green Coding en 2025: Cómo Desarrollar Software Sostenible sin Comprometer el Rendimiento","description":"Descubre las mejores prácticas para reducir la huella de carbono de tu código y por qué el desarrollo sostenible se ha convertido en una habilidad esencial para los programadores en 2025.","content":" Por qué el desarrollo sostenible ya no es opcional en 2025  Cuando empecé a programar hace más de una década, la eficiencia del código se medía principalmente en términos de velocidad y consumo de memoria. Optimizábamos para mejorar la experiencia del usuario y reducir costes de infraestructura. Hoy, en 2025, hay una nueva métrica que se ha vuelto igual de importante: la huella de carbono de nuestro software.  Según los últimos estudios, el sector tecnológico es responsable de aproximadamente el 4% de las emisiones globales de gases de efecto invernadero, una cifra comparable a la industria de la aviación. Y lo más alarmante: está creciendo a un ritmo del 6% anual.  Como desarrolladores, tenemos una responsabilidad directa en este problema, pero también la capacidad de ser parte de la solución. Este artículo comparte mi experiencia implementando prácticas de \"Green Coding\" en proyectos reales durante el último año, demostrando que el desarrollo sostenible y el alto rendimiento no son ","date":"2025-04-13T11:30:00.000Z","dateFormatted":"13 de abril de 2025","tags":["coding","frontend","green-coding","optimizacion","backend"],"category":"Coding","thumbnail":"/images/blog/green-coding.png","readingTime":"8 min de lectura"},{"slug":"edge-computing-desarrollo-aplicaciones-2025","title":"Edge Computing en 2025: La Nueva Frontera para Desarrolladores","description":"Descubre cómo el Edge Computing está transformando el desarrollo de aplicaciones y por qué deberías incorporarlo en tus proyectos este 2025.","content":" El futuro está en el borde: ¿Por qué Edge Computing es imprescindible en 2025?  Cuando comencé a desarrollar aplicaciones hace unos años, todo giraba en torno a la nube. \"Cloud-first\" era el mantra que repetíamos en cada proyecto. Sin embargo, en los últimos meses, me he encontrado trabajando cada vez más con una arquitectura diferente que está cambiando radicalmente mi enfoque: **Edge Computing**.  Y no estoy solo. Según los últimos informes, para finales de 2025, más del 75% de los datos empresariales se procesarán fuera del centro de datos tradicional o la nube. Es un cambio de paradigma que está redefiniendo cómo construimos aplicaciones.  ¿Qué es exactamente Edge Computing y por qué debería importarte?  En términos sencillos, Edge Computing lleva el procesamiento de datos y la toma de decisiones lo más cerca posible de donde se generan esos datos: al \"borde\" de la red. En lugar de enviar todos los datos a centros de procesamiento centralizados en la nube, el procesamiento ocurre ","date":"2025-04-13T10:00:00.000Z","dateFormatted":"13 de abril de 2025","tags":["edge-computing","desarrollo","cloud","arquitectura","tendencias"],"category":"Tendencias","thumbnail":"/images/blog/edge-computing-2025.png","readingTime":"5 min de lectura"},{"slug":"graphql-spring-boot-guia-completa","title":"GraphQL con Spring Boot - Creando APIs modernas y eficientes","description":"Aprende a implementar GraphQL en aplicaciones Spring Boot para crear APIs más eficientes, flexibles y potentes que superan las limitaciones de REST.","content":"La primera vez que me enfrenté a una API GraphQL fue en 2023, trabajando en un proyecto que necesitaba consumir datos de múltiples fuentes con una interfaz extremadamente flexible. En ese momento, nuestro equipo llevaba meses luchando con un conjunto de endpoints REST que se habían vuelto inmanejables: demasiados endpoints, problemas de over-fetching y under-fetching constantes, y una documentación que nadie podía mantener actualizada.  Un compañero sugirió migrar a GraphQL y, aunque al principio fui escéptico ¿otra tecnología de moda?, decidimos hacer una prueba de concepto. Tres semanas después, habíamos migrado una parte crítica de nuestra API y los resultados eran innegables: peticiones más eficientes, frontend más ágil y, sorprendentemente, un backend más fácil de mantener.  Hoy, después de implementar GraphQL en varios proyectos Spring Boot, puedo afirmar que se ha convertido en mi enfoque preferido para muchos casos de uso. En este artículo, compartiré todo lo que he aprendido s","date":"2025-04-11T15:15:00.000Z","dateFormatted":"11 de abril de 2025","tags":["java","spring","graphql","backend","api"],"category":"Backend","thumbnail":"/images/blog/springboot-graphql.png","readingTime":"20 min de lectura"},{"slug":"las-10-herramientas-desarrollo-2025","title":"Las 10 Herramientas de Desarrollo que Han Revolucionado mi Flujo de Trabajo en 2025","description":"Descubre las herramientas que han transformado mi productividad como desarrollador y cómo pueden mejorar tu flujo de trabajo diario.","content":"Cómo pasé de programador cansado a desarrollador eficiente  Hace unos años, mi rutina diaria como desarrollador era agotadora: saltaba constantemente entre aplicaciones, perdía tiempo en tareas repetitivas y acababa el día con la sensación de haber trabajado mucho pero avanzado poco. Todo cambió cuando empecé a invertir tiempo en encontrar y configurar las herramientas adecuadas para mi flujo de trabajo.  En este artículo quiero compartir las 10 herramientas que han transformado radicalmente mi día a día como desarrollador en 2025. No son simples recomendaciones teóricas: uso cada una de ellas a diario y han supuesto un antes y un después en mi productividad.  1. GitHub Copilot Enterprise: Mi par programador virtual  Si todavía no habéis probado la versión Enterprise de GitHub Copilot, estáis perdiéndoos una revolución. Sí, la versión básica ya era impresionante en 2023, pero la evolución que ha experimentado en los últimos dos años es asombrosa.  Lo que me ha cambiado la vida no es so","date":"2025-04-09T11:00:00.000Z","dateFormatted":"9 de abril de 2025","tags":["desarrollo","productividad","dev-tools","vscode","devops"],"category":"dev-tools","thumbnail":"/images/blog/devtools.png","readingTime":"9 min de lectura"},{"slug":"microservicios-spring-cloud-arquitectura-completa","title":"Microservicios con Spring Cloud - Arquitectura completa paso a paso","description":"Implementa una arquitectura de microservicios robusta usando Spring Cloud, desde la configuración básica hasta el despliegue en Kubernetes.","content":"Mi travesía desde el monolito a los microservicios\r \r Hace unos años, cuando dirigía el desarrollo de una plataforma de comercio electrónico para un cliente importante, nos enfrentamos a un monolito de más de 200.000 líneas de código que se había vuelto completamente inmanejable. Cada despliegue era una pesadilla: una simple corrección podía llevar días de pruebas y una regresión inesperada podía tirar abajo todo el sistema.\r \r Tras una noche particularmente desastrosa en la que tuvimos que hacer un rollback de emergencia a las 3 de la mañana, tomé la decisión de migrar a microservicios. Lo que comenzó como un experimento con un único servicio de catálogo extraído del monolito, se convirtió en una transformación completa de nuestra arquitectura utilizando Spring Cloud.\r \r No voy a mentir, el camino estuvo lleno de obstáculos. Desde servicios demasiado granulares que generaban una sobrecarga de comunicación, hasta problemas de consistencia de datos que nos costó semanas resolver. Pero u","date":"2025-04-11T10:00:00.000Z","dateFormatted":"11 de abril de 2025","tags":["java","spring","microservicios","spring-cloud","backend"],"category":"backend","thumbnail":"/images/blog/spring-cloud-microservices.png","readingTime":"16 min de lectura"},{"slug":"seguridad-spring-boot-guia-completa","title":"Seguridad en aplicaciones Spring Boot - Desde autenticación básica hasta OAuth2 y JWT","description":"Implementa diferentes niveles de seguridad en tus aplicaciones Spring Boot, desde configuraciones básicas hasta soluciones avanzadas con OAuth2 y JWT.","content":"Mi evolución con Spring Security: de principiante a experto  Todavía recuerdo mi primer proyecto real con Spring Boot. La aplicación funcionaba perfectamente en desarrollo: los endpoints respondían rápido, la integración con la base de datos era fluida y el cliente estaba encantado... hasta que mencioné que cualquiera con acceso a la URL podía ver todos los datos. \"¿No tiene seguridad?\", preguntó con cara de espanto. Mi respuesta tímida fue \"eso es para la siguiente fase\", mientras internamente entraba en pánico pensando en todo lo que desconocía sobre Spring Security.  Mi viaje comenzó con la autenticación básica: usuario y contraseña en memoria, suficiente para salir del paso. Después vinieron los usuarios en base de datos, formularios personalizados y, finalmente, mi primera implementación de JWT. El día que tuve que integrar nuestro sistema con Azure AD mediante OAuth2, pasé tres noches seguidas depurando tokens y redirecciones que no funcionaban.  En este artículo, os compartiré t","date":"2025-04-11T10:45:00.000Z","dateFormatted":"11 de abril de 2025","tags":["java","spring","seguridad","backend","jwt"],"category":"Backend","thumbnail":"/images/blog/spring-security.png","readingTime":"34 min de lectura"},{"slug":"uv-gestor-paquetes-python-2025","title":"UV - El Gestor de Paquetes Python que Revolucionará tu Flujo de Trabajo en 2025","description":"Descubre cómo UV, el gestor de paquetes ultrarrápido escrito en Rust, está transformando el desarrollo en Python y por qué deberías adoptarlo inmediatamente.","content":" El problema con la gestión de paquetes en Python hasta ahora  Si llevas tiempo trabajando con Python, seguramente has experimentado la frustración: crear un entorno virtual, instalar dependencias y configurar tu proyecto puede convertirse en un proceso tedioso que consume minutos preciosos de tu tiempo.  \"*Por fin tengo pip, virtualenv, pip-tools y todo configurado... ¡Ahora solo necesito esperar a que terminen de instalarse las dependencias!*\" - Probablemente tú, en algún momento.  Hasta hace poco, este era el estándar aceptado. Pero en 2025, existe una herramienta que está cambiando las reglas del juego por completo: **UV**.  ¿Qué es UV exactamente?  UV pronunciado simplemente como \"you-vee\" es un gestor de paquetes y entornos para Python ultrarrápido, desarrollado en Rust por Astral los creadores de Ruff, el popular linter para Python. A diferencia de otras herramientas, UV no es solo un reemplazo más rápido para pip o virtualenv - es una solución integral que unifica y mejora prác","date":"2025-04-13T15:30:00.000Z","dateFormatted":"13 de abril de 2025","tags":["python","uv","gestor-paquetes","dev-tools","desarrollo"],"category":"Dev-tools","thumbnail":"/images/blog/uv-python.png","readingTime":"6 min de lectura"},{"slug":"webassembly-javascript-guia-practica","title":"WebAssembly y JavaScript - Guía Práctica para Aplicaciones Web Ultra Rápidas en 2025","description":"Aprende a combinar el poder de WebAssembly con JavaScript para crear aplicaciones web que se ejecutan a velocidad nativa. Una guía completa con ejemplos prácticos.","content":" Por qué WebAssembly es el futuro del desarrollo web y cómo aprovecharlo ahora  Durante años, JavaScript ha sido el único lenguaje que podía ejecutarse nativamente en los navegadores web. Esta limitación imponía un techo de rendimiento a nuestras aplicaciones web, por muy optimizado que estuviera nuestro código. Con la llegada de WebAssembly WASM, todo ha cambiado: ahora podemos llevar el rendimiento de nuestras aplicaciones web a niveles antes imposibles.  En este artículo, voy a compartir cómo he integrado WebAssembly en proyectos reales, mejorando dramáticamente el rendimiento sin sacrificar la experiencia de desarrollo.  ¿Qué es exactamente WebAssembly?  WebAssembly es un formato de código binario y de bajo nivel diseñado para ejecutarse en navegadores modernos a velocidades cercanas al código nativo. A diferencia de JavaScript, que es interpretado y optimizado durante la ejecución, WebAssembly se compila previamente a un formato binario que el navegador puede ejecutar directamente","date":"2025-04-13T09:00:00.000Z","dateFormatted":"13 de abril de 2025","tags":["webassembly","javascript","frontend","optimización","wasm"],"category":"Frontend","thumbnail":"/images/blog/webassembly-javascript.png","readingTime":"6 min de lectura"}]